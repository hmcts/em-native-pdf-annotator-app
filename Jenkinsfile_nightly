#!groovy

properties([
        [
                $class: 'GithubProjectProperty',
                displayName: 'Evidence Management Store App',
                projectUrlStr: 'https://github.com/hmcts/rpa-native-pdf-annotator-app'
        ],
        pipelineTriggers([cron('H 21 * * *')]), // scheduling to trigger jenkins job.


        parameters([
                string(name: 'SecurityRules',
                        defaultValue: 'http://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
                        description: 'The URL you want to run these tests against'),
        ])
])

@Library("Infrastructure")

def type = "java"
def product = "em"
def component = "npa"

def secrets = [
        's2s-${env}': [
                secret('microservicekey-em-gw', 'FUNCTIONAL_TEST_CLIENT_S2S_TOKEN'),
                secret('microservicekey-ccd-gw', 'FUNCTIONAL_TEST_CCD_GW_SERVICE_SECRET'),
                secret('microservicekey-xui-webapp', 'FUNCTIONAL_TEST_XUI_WEBAPP_SERVICE_SECRET')
        ],
        'rpa-${env}': [
                secret('show-oauth2-token', 'FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withNightlyPipeline(type , product, component) {
    // Vars for Kubernetes
    env.IDAM_API_BASE_URI = 'https://idam-api.aat.platform.hmcts.net'
    env.OPEN_ID_API_BASE_URI = 'https://idam-web-public.aat.platform.hmcts.net/o'
    env.OIDC_ISSUER_BASE_URI = 'https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts'
    env.S2S_BASE_URI = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
    env.IDAM_WEBSHOW_WHITELIST = 'https://em-show-aat.service.core-compute-aat.internal/oauth2/callback'
    env.DM_STORE_APP_URL = 'http://dm-store-aat.service.core-compute-aat.internal'
    env.EM_ANNO_APP_URL = 'http://em-anno-aat.service.core-compute-aat.internal'
    env.CCD_DEF_API = 'http://ccd-definition-store-api-aat.service.core-compute-aat.internal'
    env.CCD_DATA_API = 'http://ccd-data-store-api-aat.service.core-compute-aat.internal'
    env.CDAM_URL = 'http://ccd-case-document-am-api-aat.service.core-compute-aat.internal'

    env.TEST_URL = "http://em-npa-aat.service.core-compute-aat.internal"

    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    enableFortifyScan('em-npa-aat')
    enableMutationTest()
    enableFullFunctionalTest()
    enableSecurityScan()

    enableSlackNotifications('#em-dev-chat')
    after('fortify-scan') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
    }
}
