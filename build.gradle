buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.6.0")
        classpath("net.serenity-bdd:serenity-single-page-report:2.6.0")
    }
}

plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '2.7.10'
    id 'uk.gov.hmcts.java' version '0.12.43'
    id 'com.github.ben-manes.versions' version '0.46.0'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'jacoco'
    id 'checkstyle'
    id 'au.com.dius.pact' version '4.2.14'
    id 'org.owasp.dependencycheck' version '8.2.1'
    id 'info.solidsoft.pitest' version '1.9.0'
    id 'com.github.hmcts.rse-cft-lib' version '0.19.631'
    id 'org.flywaydb.flyway' version '9.16.1'
    id 'io.freefair.lombok' version '8.0.1'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

if (!project.hasProperty('runList')) {
    project.ext.runList = 'main'
}


group 'uk.gov.hmcts.reform.em.npa'
version '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

mainClassName = 'uk.gov.hmcts.reform.em.npa.Application'

configurations {
    aatImplementation.extendsFrom(testImplementation)
    aatRuntime.extendsFrom(testRuntimeOnly)
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

def versions = [
        postgresql         : '42.5.1',
        h2                 : '1.4.199',
        serenity           : '2.6.0',
        serenityreporter   : '2.6.0',
        serenityRestAssured: '2.6.0',
        pact_version       : '4.0.10',
        logging            : '5.1.7',
        fasterXmlJackson   : '2.14.0-rc1',
        hibernate          : '5.6.5.Final',
        mapstruct          : '1.4.2.Final',
        springSecurity     : '5.7.5',
        springcloud        : '3.1.4',
        log4JVersion       : '2.17.2',
        jupiter            : '5.8.2',
        poi                : '5.2.2',
        zalando            : '0.27.0'
]

sourceSets {
    aat {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

dependencyCheck {
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
}

configurations.all {
    exclude group: 'com.vaadin.external.google', module: 'android-json'
    exclude group: 'org.glassfish', module: 'jakarta.el'
    exclude group: 'org.springframework.retry', module: 'spring-retry'
    exclude group: 'org.springframework.security', module: 'spring-security-rsa'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
    exclude group: 'org.codehaus.jettison', module: 'jettison'
}

dependencies {

    def withoutStuff = {
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
        exclude group: 'uk.gov.hmcts.reform', module: 'java-logging-spring'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-test'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-actuator'
    }

    def withoutNetty = {
        exclude group: 'io.netty', module: 'netty-handler'
        exclude group: 'io.netty', module: 'netty-codec-http2'
        exclude group: 'io.netty', module: 'netty-transport-native-kqueue'
        exclude group: 'io.netty', module: 'netty-transport-native-epoll'
        exclude group: 'org.eclipse.jetty.alpn', module: 'alpn-api'
    }

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-batch'
    implementation group: 'org.springframework.boot', name: 'spring-boot-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: versions.springcloud

    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-openfeign', version: versions.springcloud, {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-actuator'
    }
        
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.27'
    implementation group: 'org.apache.pdfbox', name: 'jbig2-imageio', version: '3.0.4'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.10.0'

    implementation group:'org.apache.logging.log4j', name: 'log4j-core', version: versions.log4JVersion

    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.module', name: 'jackson-module-afterburner', version: versions.fasterXmlJackson

    implementation group: 'org.zalando', name: 'problem-spring-web', version: versions.zalando
    implementation group: 'org.zalando', name: 'jackson-datatype-problem', version: versions.zalando
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.15'

    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.16.1'
    implementation group: 'org.postgresql', name: 'postgresql', version: versions.postgresql
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'
    implementation group: 'javax.transaction', name: 'javax.transaction-api'
    implementation group: 'org.ehcache', name: 'ehcache', version: '3.10.8'

    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'
    implementation group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    implementation group:'org.hibernate', name: 'hibernate-core', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-jcache', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-entitymanager', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-envers', version: versions.hibernate

    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '4.1.2'
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '3.0.0'
    implementation 'com.github.hmcts:ccd-case-document-am-client:1.59'
    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.7.0'

    implementation group: 'org.mapstruct', name: 'mapstruct', version: versions.mapstruct

    annotationProcessor group: 'org.mapstruct',name: 'mapstruct-processor', version: versions.mapstruct
    annotationProcessor group:'org.hibernate', name: 'hibernate-jpamodelgen', version: versions.hibernate
    annotationProcessor group:'org.springframework.boot', name: 'spring-boot-configuration-processor', withoutStuff


    testImplementation group:'org.springframework.boot', name: 'spring-boot-starter-test', withoutStuff
    implementation group: 'com.github.gmazzo', name: 'okhttp-mock', version: '1.5.0'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.logging

    annotationProcessor group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    annotationProcessor group: 'com.sun.xml.bind', name: 'jaxb-core', version: '4.0.2'
    annotationProcessor group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '4.0.2'

    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: versions.jupiter
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.jupiter


    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenityRestAssured, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter

    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.3.0', classifier: 'all'

    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.17.6'

    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit', version: versions.pact_version, withoutNetty
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit5', version: versions.pact_version, withoutNetty
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-java8', version: versions.pact_version, withoutNetty
    implementation group: 'au.com.dius', name: 'pact-jvm-consumer', version: versions.pact_version, withoutNetty

    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.jupiter

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    contractTestImplementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    contractTestImplementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.14'
    contractTestImplementation group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.14'

    aatImplementation group: 'com.github.hmcts', name: 'em-test-helper', version: '1.21.9'
    aatImplementation group: 'org.apache.poi', name: 'poi', version: versions.poi
    aatImplementation group: 'org.apache.poi', name: 'poi-ooxml', version: versions.poi
    cftlibImplementation 'org.springframework.boot:spring-boot-devtools'
}

dependencyManagement {
    dependencies {

        // Do not change - START
        // Changing below will break Serenity Report generation
        dependencySet(group: 'junit', version: '4.13') {
            entry 'junit'
        }

        dependencySet(group: 'net.bytebuddy', version: '1.14.2') {
            entry 'byte-buddy'
            entry 'byte-buddy-agent'
        }
        // Do not change - END

        //CVE-2021-22044
        dependencySet(group: 'org.springframework.cloud', version: versions.springcloud) {
            entry 'spring-cloud-openfeign-core'
            entry 'spring-cloud-starter-openfeign'
        }

        //CVE-2022-23437
        dependencySet(group: 'xerces', version: '2.12.2') {
            entry 'xercesImpl'
        }

        //CVE-2022-1471
        dependencySet(group: 'org.yaml', version: '2.0') {
            entry 'snakeyaml'
        }

        // CVE-2022-31692 - CVE-2022-31690
        dependencySet(group: 'org.springframework.security', version: '5.7.5') {
            entry 'spring-security-crypto'
            entry 'spring-security-core'
            entry 'spring-security-web'
        }

        //CVE-2022-45143
        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.69') {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-websocket'
        }

        //CVE-2023-24998
        dependencySet(group: 'commons-fileupload', version: '1.5') {
            entry 'commons-fileupload'
        }
    }
}

bootJar {
    getArchiveFileName().set(provider {
        'rpa-native-pdf-annotator-app.jar'
    })
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

def coverageExclusionList = [
    '**uk/gov/hmcts/reform/em/npa/Application*',
    '**uk/gov/hmcts/reform/em/npa/appinsights/*',
    '**uk/gov/hmcts/reform/em/npa/config/**/*',
    '**uk/gov/hmcts/reform/em/npa/data/migration/PendingMigrationScriptException*',
    '**uk/gov/hmcts/reform/em/npa/data/migration/FlywayNoOpStrategy*',
    '**uk/gov/hmcts/reform/em/npa/config/FlywayConfiguration*',
    '**uk/gov/hmcts/reform/em/npa/domain/*',
    '**uk/gov/hmcts/reform/em/npa/service/dto/external/annotation/*',
    '**uk/gov/hmcts/reform/em/npa/ccd/domain/*',
    '**uk/gov/hmcts/reform/em/npa/ccd/dto/*',
    '**uk/gov/hmcts/reform/em/npa/ccd/exception/*',
    '**uk/gov/hmcts/reform/em/npa/service/exception/*',
    '**uk/gov/hmcts/reform/em/npa/service/dto/redaction/*',
    '**uk/gov/hmcts/reform/em/npa/info/*',
    '**uk/gov/hmcts/reform/em/npa/rest/errors/ExceptionTranslator*',
    '**uk/gov/hmcts/reform/em/npa/service/dto/AbstractAuditingDTO*',
    '**uk/gov/hmcts/reform/em/npa/rest/ResponseUtil*',
]

checkstyle {
    maxWarnings = 10
    toolVersion = '8.12'
    ignoreFailures = true
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)

jacocoTestReport {
    executionData(test)

    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation =  file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

}

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.test.exclusions", "**/test/**"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"

        property "sonar.issue.ignore.multicriteria", "e1"
        property "sonar.issue.ignore.multicriteria.e1.ruleKey", "java:S2629"
        property "sonar.issue.ignore.multicriteria.e1.resourceKey", "src/main/java/uk/gov/hmcts/reform/em/npa/**"
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.aat.java.srcDirs
        testResourceDirs += project.sourceSets.aat.resources.srcDirs
        testSourceDirs += project.sourceSets.contractTest.java.srcDirs
        testResourceDirs += project.sourceSets.contractTest.resources.srcDirs
    }
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

test {
    useJUnitPlatform()
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/npa/functional/**"

    // Serenity Single page Reports
    // functional.finalizedBy(aggregate)

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/npa/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}


task contract(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/em/npa/**"
    systemProperty 'pact.rootDir', "pacts"
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task runAndPublishConsumerPactTests(type: Test){
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

task fortifyScan(type: JavaExec)  {
    mainClass.set("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

runAndPublishConsumerPactTests.dependsOn contract

runAndPublishConsumerPactTests.finalizedBy pactPublish


project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

serenity {
    reports = ["single-page-html"]
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'https://localhost:80'
        version = project.pactVersion
    }
}

compileJava.dependsOn processResources

pitest {

    logger.lifecycle("Runs PIT  Tests")
    targetClasses = ['uk.gov.hmcts.reform.em.npa.*']

    excludedClasses = [
            'uk.gov.hmcts.reform.em.npa.appinsights.*' ,
            'uk.gov.hmcts.reform.em.npa.domain.*' ,
            'uk.gov.hmcts.reform.em.npa.info.*',
            'uk.gov.hmcts.reform.em.npa.Application.java',
            'uk.gov.hmcts.reform.em.npa.infrastructure.*'

    ]
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    coverageThreshold = 0
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true
    threads = 10
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    failWhenNoMutations = false
}

project.tasks['pitest'].group = "Verification"

task loadEnvSecrets() {
    doLast {
        if (!project.file('./.aat-env').exists()) {
            new ByteArrayOutputStream().withStream { os ->
                exec {
                    commandLine 'az', 'keyvault', 'secret', 'show', '--vault-name', 'em-npa-aat', '-o', 'tsv', '--query', 'value', '--name', 'em-npa-dot-env'
                    standardOutput = os
                }
                project.file('./.aat-env').write(new String(os.toString().replace('\n', '').decodeBase64(), java.nio.charset.StandardCharsets.UTF_8))
            }
        }
    }
}

task reloadEnvSecrets(group: 'ccd tasks', dependsOn: [loadEnvSecrets]) {
    doFirst {
        if (project.file('./.aat-env').exists()) {
            project.file('./.aat-env').delete()
        }
    }
}

bootRun {
    doFirst() {
        if (project.file('./.aat-env').exists()) {
            project.file('./.aat-env').readLines().each() {
                def index = it.indexOf("=")
                def key = it.substring(0, index)
                def value = it.substring(index + 1)
                environment key, value
            }
        }
    }
}

functional {
    doFirst() {
        if (project.file('./.aat-env').exists()) {
            project.file('./.aat-env').readLines().each() {
                def index = it.indexOf("=")
                def key = it.substring(0, index)
                def value = it.substring(index + 1)
                environment key, value
            }
        }
    }
}

bootWithCCD {
    dependsOn(loadEnvSecrets)

    doFirst() {
        project.file('./.aat-env').readLines().each() {
            def index = it.indexOf("=")
            def key = it.substring(0, index)
            def value = it.substring(index + 1)
            environment key, value
        }

    }
    environment 'RSE_LIB_ADDITIONAL_DATABASES', 'emnpa'
    environment 'DATA_STORE_S2S_AUTHORISED_SERVICES', 'ccd_gw,ccd_data,ccd_ps,aac_manage_case_assignment,ccd_case_document_am_api,am_role_assignment_service,hmc_cft_hearing_service,prl_citizen_frontend,xui_webapp'
    environment 'S2S_URL', 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
    environment 'CASE_DOCUMENT_AM_API_S2S_SECRET','${CASE_DOCUMENT_AM_API_S2S_SECRET}'
    authMode = uk.gov.hmcts.rse.AuthMode.AAT
}

flyway {
    url = System.getenv('FLYWAY_URL')
    user = System.getenv('FLYWAY_USER')
    password = System.getenv('FLYWAY_PASSWORD')
    baselineOnMigrate = true
    baselineVersion = '1'
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
}

// exclude the logback binding is coming in via cftlib
configurations.cftlibTestImplementation {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
}
