spring:
  application:
    name: EM Native PDF Annotator App
  config:
    import: "optional:configtree:/mnt/secrets/em-npa/"
  batch:
    entityValueCopy:
      cronJobSchedule: ${ENTITY_VALUE_COPY_CRONJOB_SCHEDULE:0 0/5 * * * *} # Every 5 minutes
      pageSize: ${ENTITY_VALUE_COPY_PAGE_SIZE:50}
      chunkSize: ${ENTITY_VALUE_COPY_CHUNK_SIZE:50}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
    show-sql: ${SHOW_SQL:false}
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    properties:
      hibernate:
        id:
          db_structure_naming_strategy: legacy
        temp:
          use_jdbc_metadata_defaults: false
  datasource:
    url: jdbc:postgresql://${SPRING_DATASOURCE_HOST:localhost}:${SPRING_DATASOURCE_PORT:6432}/${SPRING_DATASOURCE_NAME:emnpa}${SPRING_DATASOURCE_OPTIONS:?ssl=disable}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      auto-commit: false
      maximumPoolSize: ${HIKARI_MAX_POOL_SIZE:10} #We need this to be overridden on Prod.
      connection-timeout: ${DB_CONNECTION_TIMEOUT:5000}
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:https://idam-web-public.aat.platform.hmcts.net/o}
        registration:
          oidc:
            client-id: microservicekey-em-npa-app
            client-secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}

management:
  endpoint:
    health:
      show-details: "always"
      show-components: "always"
      probes:
        enabled: true
  endpoints:
    web:
      base-path: '/'
      exposure:
        include:
         - health
         - info
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    db:
      enabled: false
    disk:
      enabled: false
  info:
     build:
       enabled: true # Whether to enable build info.
     defaults:
       enabled: true # Whether to enable default info contributors.
     env:
       enabled: true # Whether to enable environment info.
     git:
       enabled: true # Whether to enable git info.
       mode: simple # Mode to use to expose git information.

info:
  app:
    environment: ${PACKAGES_ENVIRONMENT:local}
    project: ${PACKAGES_PROJECT:em-npa}
    name: ${PACKAGES_NAME:cor}
#    version: ${PACKAGES_VERSION:unknown}

auth:
  idam:
    client:
      baseUrl: ${IDAM_API_BASE_URI:https://idam-api.aat.platform.hmcts.net}
  provider:
    service:
      client:
        baseUrl: ${S2S_BASE_URI:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}

idam:
  api:
    url: ${IDAM_API_BASE_URI:https://idam-api.aat.platform.hmcts.net}
  s2s-auth:
    url: ${S2S_BASE_URI:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
    totp_secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}
    microservice: em_npa_app
  s2s-authorised:
    services: ${S2S_NAMES_WHITELIST:ccd,em_gw,xui_webapp}

azure:
  app_insights_key: ${APPINSIGHTS_INSTRUMENTATIONKEY:true}
  application-insights:
    instrumentation-key: ${APPINSIGHTS_INSTRUMENTATIONKEY:d30268e8-8979-4579-8d58-010dbe03a1e6}

app-insights:
  dev-mode: off
  request-component: on
  telemetry-component: on

em-annotation-app:
  base-url: ${EM_ANNO_APP_URL:http://em-anno-aat.service.core-compute-aat.internal}

document_management:
  base-url: ${DM_STORE_APP_URL:http://dm-store-aat.service.core-compute-aat.internal}
  docker_url: http://dm-store:8080

case_document_am:
  url: ${CDAM_URL:http://localhost:4455}

# Delete when issueOverride variable is no longer used in SecurityConfiguration.class
oidc:
  issuer: ${OIDC_ISSUER_BASE_URI:http://localhost:8080/openam/oauth2/hmcts}

redaction:
  multipart:
    image-ext: ${REDACTION_MULTIPART_WHITELIST_EXT:jpg,jpeg,bmp,tif,tiff,png,apng,gif,ico,cur,jfif,pjpeg,pjp,svg,webp}

toggles:
  cdam_enabled: ${ENABLE_CDAM:false}

endpoint-toggles:
  search-markups: ${ENABLE_SEARCH_MARKUPS_ENDPOINT:true}

springdoc:
  packagesToScan: uk.gov.hmcts.reform.em.npa.rest
  pathsToMatch: /**

dbMigration:
  # When true, the app will run DB migration on startup.
  # Otherwise, it will just check if all migrations have been applied (and fail to start if not).
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:true}

logging:
  level:
    uk.gov.hmcts.reform.authorisation.filters: DEBUG

task:
  env: ${TASK_ENV:documentTaskLock-local}

scheduling:
  enabled: false