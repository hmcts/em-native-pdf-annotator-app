#!groovy

properties([
        [
                $class: 'GithubProjectProperty',
                displayName: 'Evidence NPA App',
                projectUrlStr: 'https://github.com/hmcts/rpa-native-pdf-annotator-app'
        ],
        pipelineTriggers([
                [$class: 'GitHubPushTrigger']
        ])
])

@Library("Infrastructure")

def type = "java"
def product = "em"
def component = "npa"

def secrets = [
        's2s-${env}': [
                secret('microservicekey-em-gw', 'FUNCTIONAL_TEST_CLIENT_S2S_TOKEN')
        ],
        'rpa-${env}': [
                secret('show-oauth2-token', 'FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

// Vars for Kubernetes
env.IDAM_API_BASE_URI = 'https://idam-api.aat.platform.hmcts.net'
env.S2S_BASE_URI = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
env.IDAM_WEBSHOW_WHITELIST = 'https://em-show-aat.service.core-compute-aat.internal/oauth2/callback'
env.DM_STORE_APP_URL = 'http://dm-store-aat.service.core-compute-aat.internal'
env.EM_ANNO_APP_URL = 'http://em-anno-aat.service.core-compute-aat.internal'

def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withPipeline(type , product, component) {
    enableDbMigration('em-npa')
    enableDockerBuild()
    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    installCharts()
    enableAksStagingDeployment()
    disableLegacyDeploymentOnAAT()
    before('buildinfra:prod') {
        error('Halting pipeline before PROD.')
    }
}
